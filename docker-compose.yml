# docker-compose.yml

services:
  db:
    image: postgres:13
    environment:
      TZ: Asia/Tehran
      POSTGRES_USER: tuttyuser
      POSTGRES_PASSWORD: tuttypassword
      POSTGRES_DB: tuttydb
    volumes:
      - db_data:/var/lib/postgresql/data
    # ports:
    #   - '5432:5432'

  nginx:
    image: nginx:latest
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  redis:
    image: redis:7-alpine
    environment:
      TZ: Asia/Tehran
    # ports:
    #   - '6379:6379'

  backend:
    build:
      context: ./backend
    environment:
      TZ: Asia/Tehran
    restart: unless-stopped
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - ./backend/.env:/app/.env
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env
    # ports:
    #   - '8000:8000'
    dns:
      - 8.8.8.8
      - 8.8.4.4

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  celery_worker:
    build:
      context: ./backend
    environment:
      TZ: Asia/Tehran
    command: celery -A celery_config worker -l info --concurrency=5
    volumes:
      - ./backend:/app
      - uploads_data:/app/uploads
      - ./backend/.env:/app/.env
    depends_on:
      - backend
      - redis
    env_file:
      - ./backend/.env

  frontend:
    build:
      context: ./frontend
      args:
        NEXT_PUBLIC_API_URL: /api
        NEXT_PUBLIC_GOOGLE_CLIENT_ID: 201837583381-o18ot139ujp2rscl6a0pgo6l4uik5jnc.apps.googleusercontent.com
    environment:
      TZ: Asia/Tehran
      NEXT_PUBLIC_API_URL: /api
      NEXT_PUBLIC_GOOGLE_CLIENT_ID: 201837583381-o18ot139ujp2rscl6a0pgo6l4uik5jnc.apps.googleusercontent.com
      WATCHPACK_POLLING: "true"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev  # Development mode only
    depends_on:
      - backend
      - redis
    # ports:
    #   - '3000:3000'

volumes:
  frontend_next:
  frontend_node_modules:
  backend_env:
  db_data:
  uploads_data: