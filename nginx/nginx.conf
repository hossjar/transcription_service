# nginx/nginx.conf

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;
    client_max_body_size 250M;
    proxy_read_timeout 3600s;
    proxy_send_timeout 3600s;
    keepalive_timeout 3600s;

    upstream frontendserver {
        server frontend:3000;
    }

    upstream backendserver {
        server backend:8000;
    }

    server {
        listen       80;
        server_name  tootty.com www.tootty.com test.tootty.com;
        # # Serve favicon
        # location /favicon.ico {
        #     proxy_pass http://frontendserver;
        #     proxy_set_header Host $host;
        #     proxy_set_header X-Real-IP $remote_addr;
        #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        #     proxy_set_header X-Forwarded-Host $host;
        #     proxy_set_header X-Forwarded-Proto https;  # Updated to https
        # }

        # Serve Next.js static files
        location /_next/static/ {
            proxy_pass http://frontendserver;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            #proxy_set_header X-Forwarded-Proto https;  # Updated to https
            proxy_set_header X-Forwarded-Proto $scheme; 

        }

        # Handle SSE (Server-Sent Events)
        location /api/sse {
            rewrite ^/api/?(.*)$ /$1 break;
            proxy_pass http://backendserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            #proxy_set_header X-Forwarded-Proto https;  # Updated to https
            proxy_set_header X-Forwarded-Proto $scheme; 
            proxy_set_header Connection '';

            proxy_buffering off;
            proxy_cache off;
            add_header Cache-Control no-cache;
        }

        # Route API requests to backend
        location /api/ {
            rewrite ^/api/?(.*)$ /$1 break;
            proxy_pass http://backendserver;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            #proxy_set_header X-Forwarded-Proto https;  # Updated to https
            proxy_set_header X-Forwarded-Proto $scheme;         
        }


        # Handle /auth route if needed
        location /auth {
            proxy_pass http://backendserver;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            #proxy_set_header X-Forwarded-Proto https;  # Updated to https
            proxy_set_header X-Forwarded-Proto $scheme;         
        }

        # All other requests to frontend
        location / {
            proxy_pass http://frontendserver;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $host;
            #proxy_set_header X-Forwarded-Proto https;  # Updated to https
            proxy_set_header X-Forwarded-Proto $scheme;             
            proxy_cache_bypass $http_upgrade;
        }
    }
}
